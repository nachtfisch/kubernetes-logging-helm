apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Release.Name }}-opensearch-dashboards-index-pattern
  labels: {{ include "logging.labels" . | indent 4 }}
data:
  check_opensearch-dashboards.sh: |-
    #!/bin/bash
    
    echo "opensearch-dashboards URL: $opensearch_dashboards_URL"

    state="down"
    while [[ ! $state =~ "green" ]]; do
      state=`curl -sS -X GET -u$opensearch_dashboards_USER:$opensearch_dashboards_PASSWORD \
        $opensearch_dashboards_URL/api/status | jq '.status.overall.state'`
      echo "opensearch_dashboards overall state $state"
      sleep 2
    done  

    echo "opensearch-dashboards is up"
      
  create_index_pattern.sh: |-
    #!/bin/bash

    echo "opensearch_dashboards URL: $opensearch_dashboards_URL"
    echo "opensearch_dashboards USER: $opensearch_dashboards_USER"
    echo "opensearch_dashboards PASSWORD: $opensearch_dashboards_PASSWORD"
    echo "opensearch_dashboards DEVELOPER USER: $opensearch_dashboards_DEVELOPER_USER"
    echo "opensearch_dashboards DEVELOPER PASSWORD: $opensearch_dashboards_DEVELOPER_PASSWORD"
    echo "INDEX_PATTERNS: $INDEX_PATTERNS"
    echo "TENANTS: $TENANTS"
    
    if [ -z $INDEX_PATTERNS ]; then 
      echo "no index patterns defined"
      exit 0
    fi  
    
    IFS=',' read -ra PATTERNS <<< "$INDEX_PATTERNS"
    IFS=',' read -ra TENANTS <<< "$TENANTS"

    version=`curl -sS -X GET -u$opensearch_dashboards_USER:$opensearch_dashboards_PASSWORD \
        $opensearch_dashboards_URL/api/status | jq '.version.number'`  

    version="${version%\"}"
    version="${version#\"}"  

    echo "opensearch-dashboards VERSION: ${version}"


    for tenant in "${TENANTS[@]}"; do

      if [ $tenant == "Developer" ]; then
        opensearch_dashboards_USER_=$opensearch_dashboards_DEVELOPER_USER
        opensearch_dashboards_PASSWORD_=$opensearch_dashboards_DEVELOPER_PASSWORD
      else
        opensearch_dashboards_USER_=$opensearch_dashboards_USER
        opensearch_dashboards_PASSWORD_=$opensearch_dashboards_PASSWORD
      fi  

      
      for i in "${PATTERNS[@]}"; do
        
        if [ "${i}" == "all" ]; then 
          pattern="${i}"
        else
          pattern="${i}-*"
        fi
        
        check=`curl -s -w "%{http_code}" -X GET -u$opensearch_dashboards_USER_:$opensearch_dashboards_PASSWORD_ \
          -H "securitytenant: ${tenant}" $opensearch_dashboards_URL/api/saved_objects/index-pattern/${pattern}`
        
        if [[ "$check" =~ "404" ]]; then
  
            result=`curl -s -w "%{http_code}" -X POST -u$opensearch_dashboards_USER_:$opensearch_dashboards_PASSWORD_ \
              $opensearch_dashboards_URL/api/saved_objects/index-pattern/${pattern} \
              -H "securitytenant: ${tenant}" -H "osd-xsrf: true" -H "Content-Type: application/json" \
              -d "{\"attributes\": {\"title\": \"${pattern}\",\"timeFieldName\": \"@timestamp\"}}"`
            
          if [[ "${result}" =~ "200" ]]; then 
            echo "index pattern ${tenant}/${pattern} created successfully"
          else 
            echo "creating index pattern: ${tenant}/${pattern} failed"  
          fi    

        elif [[ "$check" =~ "200" ]]; then
          echo "index pattern ${tenant}/${pattern} already exist"
        else 
           echo "checking index pattern ${tenant}/${pattern} returns: $check"
        fi
      
      done  

        
      if [ "${PATTERNS[0]}" == "all" ]; then 
        default="all"
      else
        default="${PATTERNS[0]}-*"
      fi 

      echo "setting default index pattern: $default" 

      result=`curl -v -s -w "%{http_code}" -X PUT -u$opensearch_dashboards_USER_:$opensearch_dashboards_PASSWORD_ \
          $opensearch_dashboards_URL/api/saved_objects/config/${version} \
          -H "securitytenant: ${tenant}" -H "osd-xsrf: true" -H "Content-Type: application/json" \
          -d "{\"attributes\": {\"defaultIndex\": \"${default}\"}}"` 

      if [[ "${result}" =~ "200" ]]; then 
        echo "default index pattern ${tenant}/${default} set successfully"
      else 
        echo "setting default index pattern ${tenant}/${default} failed ${result}"  
      fi    
        
    
        
    echo "Importing saved objects for ${tenant} tenant"
    for f in /saved_objects/* ; do
      result=`curl -s -w "%{http_code}" -X POST -u$opensearch_dashboards_USER_:$opensearch_dashboards_PASSWORD_ \
        $opensearch_dashboards_URL/api/saved_objects/_import?overwrite=true \
        -H "securitytenant: ${tenant}" -H "osd-xsrf: true" --form file=@${f}`
      
      if [[ "${result}" =~ "200" ]]; then 
        echo "${f} imported"
      else 
        echo "importing ${f} failed ${result}"  
      fi  
    done
    done
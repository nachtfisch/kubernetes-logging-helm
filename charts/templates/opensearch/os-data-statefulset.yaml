{{- if .Values.opensearch.in_cluster }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-data
  labels: {{ include "logging.labels" . | indent 4 }}
spec:
  updateStrategy:
    type: RollingUpdate
  serviceName: {{ .Release.Name }}-data
  replicas: {{ .Values.data.replicas }}
  selector:
    matchLabels: {{ include "logging.selectorLabels" . | indent 6 }}
      node: os
      {{- if .Values.opensearch.single_node }}
      type: single
      {{- else }}
      type: data      
      {{- end }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/opensearch/os-configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/opensearch/os-certificates-sec.yaml") . | sha256sum }}
      labels: {{ include "logging.selectorLabels" . | indent 8 }}
        node: os
        {{- if .Values.opensearch.single_node }}
        type: single
        {{- else }}
        type: data
        {{- end }}
    spec:
      priorityClassName: {{ default .Values.priority_class .Values.data.priority_class }}
      {{- with .Values.data.affinity }}     
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.data.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Release.Name }}-priv
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml . | nindent 6 }}
      {{- end }}
      containers:
      - name: main
        image: {{ .Values.opendistro.image }}:{{ .Values.opendistro.imageTag }}
        resources: {{ toYaml .Values.data.resources | nindent 10 }}
        {{- if .Values.opensearch.single_node }}
        ports:
        - containerPort: 9200
          name: http
        - containerPort: 9300
          name: transport  
        {{- else}}  
        ports:  
        - containerPort: 9300
          name: transport
        {{- end }} 
        livenessProbe:
          tcpSocket:
            port: transport
          initialDelaySeconds: 60
          periodSeconds: 60        
        volumeMounts:
        - name: os-data
          mountPath: /data
        {{- if .Values.opensearch.snapshot.enabled }}
        - name: os-snapshot
          mountPath: /snapshot
        {{- end }}          
        {{- if .Values.opensearch.single_node }}
        - name: opensearch
          mountPath: /livenessProbe.sh
          subPath: livenessProbe.sh
        {{- end }}  
        - name: opensearch
          mountPath: /usr/share/opensearch/config/opensearch.yml
          subPath: opensearch.yml
        - name: opensearch
          mountPath: /usr/share/opensearch/config/log4j2.properties
          subPath: log4j2.properties  
        - name: certificates
          mountPath: /usr/share/opensearch/config/node.pem
          subPath: node.pem
        - name: certificates
          mountPath: /usr/share/opensearch/config/node-key.pem
          subPath: node-key.pem
        - name: certificates
          mountPath: /usr/share/opensearch/config/root-ca.pem
          subPath: root-ca.pem
        - name: certificates
          mountPath: /usr/share/opensearch/config/efk-rest.pem
          subPath: efk-rest.pem
        - name: certificates
          mountPath: /usr/share/opensearch/config/efk-rest-key.pem
          subPath: efk-rest-key.pem
        - name: certificates
          mountPath: /usr/share/opensearch/config/opensearch.truststore
          subPath: opensearch.truststore
        - name: certificates
          mountPath: /usr/share/opensearch/config/http.truststore 
          subPath: http.truststore        
        env:
        - name: os_url
          value: https://localhost:9200
        - name: os_user
          value: {{ .Values.opensearch.user }}
        - name: os_pass
          value: {{ .Values.opensearch.password }}        
        - name: "NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: OPENSEARCH_JAVA_OPTS
          value: "-Xms{{ .Values.data.heap_size }} -Xmx{{ .Values.data.heap_size }} {{ .Values.opensearch.additional_jvm_params }}"
        {{- if not .Values.opensearch.single_node }}
        - name: NODE_MASTER
          value: "false"  
        {{- end }}
        - name: NODE_DATA
          value: "true"        
      volumes:
      - name: opensearch
        configMap:
          name: {{ .Release.Name }}
          defaultMode: 0755
{{- if .Values.opensearch.snapshot.enabled }}
      - name: os-snapshot
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-snapshot-pvc
{{- end }}  
      - name: certificates
        secret:
          defaultMode: 0755
          secretName: {{ .Release.Name }}-certificates
      - name: securityconfig
        secret:
          defaultMode: 0755        
          secretName: {{ .Release.Name }}-securityconfig    
      # opensearch requires vm.max_map_count to be at least 262144.
      # If your OS already sets up this number to a higher value, feel free
      # to remove this init container.
      initContainers:
      - name: init
        image: {{ include "init_container.image" . }}
        imagePullPolicy: {{ .Values.init_container.imagePullPolicy }}
        command: ["sh", "-c", "/sbin/sysctl -w vm.max_map_count=262144 || true && chown 1000:1000  /data && if [ -d /snapshot ]; then chown 1000:1000 /snapshot ; fi"]
        volumeMounts:
        - name: os-data
          mountPath: /data
        {{- if .Values.opensearch.snapshot.enabled }}
        - name: os-snapshot
          mountPath: /snapshot
        {{- end }}           
        securityContext:
          runAsUser: 0
          privileged: true    
  volumeClaimTemplates:
  - metadata:
      name: os-data
    spec:
      storageClassName: {{ default .Values.storage_class .Values.data.storage_class | quote }}      
      resources:
        requests:
          storage: {{ .Values.data.storage }}
      accessModes:
      - ReadWriteOnce
{{- end }}
